/*
89. 格雷编码

格雷编码是一个二进制数字系统，在该系统中，两个连续的数值仅有一个位数的差异。
给定一个代表编码总位数的非负整数 n，打印其格雷编码序列。即使有多个不同答案，你也只需要返回其中一种。
格雷编码序列必须以 0 开头。

示例 1:
输入: 2
输出: [0,1,3,2]
解释:
00 - 0
01 - 1
11 - 3
10 - 2

对于给定的 n，其格雷编码序列并不唯一。
例如，[0,2,3,1] 也是一个有效的格雷编码序列。

00 - 0
10 - 2
11 - 3
01 - 1

示例 2:
输入: 0
输出: [0]
解释: 我们定义格雷编码序列必须以 0 开头。
     给定编码总位数为 n 的格雷编码序列，其长度为 2n。当 n = 0 时，长度为 20 = 1。
     因此，当 n = 0 时，其格雷编码序列为 [0]。
*/

/*
解法：从n阶集合G(n)到n+1阶G(n+1)，只需要首先在所有的G(n)前面加0，然后G(n)按照逆序，前面加1；合并即可得到G(n+1)。
如二阶是00 01 11 10，那么三阶就是000 001 011 010 | 110 111 101 100，后四个数字就是二阶的倒序(10 11 01 00)前面加1。
执行用时：1 ms, 在所有 Java 提交中击败了82.20% 的用户
内存消耗：36.4 MB, 在所有 Java 提交中击败了92.43% 的用户
*/
class Solution {
    public List<Integer> grayCode(int n) {
        List<Integer> lists = new ArrayList<>();
        lists.add(0);
        for(int i = 0; i < n; i++) {
            int carry = 1 << i;
            for(int j = lists.size() - 1; j >= 0; j--)
                lists.add(lists.get(j) + carry);
        }
        return lists;
    }
}


